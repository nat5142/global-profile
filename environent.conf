
[ -n "$PS1" ] && bind "set completion-ignore-case on"

export PYTHONSTARTUP="$HOME/.pythonrc.py"
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32'

# Returns 0 (success) if the pwd is tracked, otherwise 1 (failure).
git_pwd_is_tracked() {
   [ $(git log -1 --pretty=oneline . 2> /dev/null | wc -l) -eq "1" ]
}

# Emits the current datetime: %Y-%m-%d %H:%M
show_datetime() {
  echo "${COLOR_GREEN}$(date "+%Y-%m-%d %H:%M:%S")${COLOR_NONE}"
}

# Stores the exit status of the last command for use by show_exit_status function.
if [[ ! $PROMPT_COMMAND =~ store_exit_status ]]; then
  export PROMPT_COMMAND="store_exit_status && ${PROMPT_COMMAND:-:}"
fi
store_exit_status() {
  LAST_EXIT_STATUS=$?
}

# Emits exit status of last command if error condition returned.
show_exit_status() {
  if [ "x${LAST_EXIT_STATUS}" != "x0" ]; then
    echo " [${COLOR_RED}${LAST_EXIT_STATUS}${COLOR_NONE}]"
  fi
}

# Emits the current git branch and marker if there are outstanding changes.
show_git_branch_and_status() {
  if git_pwd_is_tracked; then
    local branch_prompt
    branch_prompt=$(__git_ps1 " (${COLOR_BLUE}%s${COLOR_NONE})")
    if [[ -n "$branch_prompt" ]]; then
      echo "$branch_prompt $(show_git_status)"
    fi
  fi
}

# Emits a red ✗ if current repository is 'dirty'.
show_git_status() {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "${COLOR_RED}変${COLOR_NONE}"
}
